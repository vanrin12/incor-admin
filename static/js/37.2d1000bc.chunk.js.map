{"version":3,"sources":["commons/components/Loading/LoadingSmall.js","modules/media/components/ItemMedia.js","modules/media/components/index.js","modules/media/containers/index.js"],"names":["LoadingSmall","React","createElement","Spinner","animation","variant","size","memo","_ref","dataMedia","handleDeleteMedia","Fragment","type","className","onClick","id","role","tabIndex","onKeyDown","style","backgroundImage","concat","url","Video","src","getListMedia","dataListMedia","isProcessing","uploadMedia","statusCode","totalRows","isProcessingUpload","deleteMedia","inputFile","useRef","isShow","setIsShow","useState","mediaType","setMediaType","page","setPage","paginationIndex","setPaginationIndex","modalCancel","setModalCancel","content","idDelete","setIdDelete","modalDelete","setModalDelete","imageUpload","setImageUpload","name","nameImage","imageView","useEffect","handleChangeFile","e","target","validity","valid","files","window","URL","webkitURL","createObjectURL","handleShowDeleteMedia","idMedia","renderItemMedia","length","slice","map","item","ItemMedia","key","MainLayout","activeMenu","onKeyPress","Button","customClass","Loading","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","Math","ceil","onPageChange","eventKey","handleSelectPagination","value","selected","forcePage","containerClassName","disabledClassName","activeClassName","breakClassName","breakLinkClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","marginPagesDisplayed","nextLinkClassName","Modal","isOpen","handleClose","customClassButton","classNameBtnLeft","isShowIconClose","onButtonClick","inputRefCurrent","current","click","ref","accept","onChange","alt","Input","label","handleAddMediaProduct","formData","FormData","append","isDisabled","isShowFooter","handleSubmit","textBtnRight","isShowTwoBtn","textBtnLeft","connect","state","mediaReducer","isProcessingDelete","dispatch","bindActionCreators","Creators","mediaComponent"],"mappings":"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","file":"static/js/37.2d1000bc.chunk.js","sourcesContent":["// @flow\r\n// libs\r\nimport React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport const LoadingSmall = () => (\r\n  <Spinner animation=\"border\" variant=\"warning\" size=\"sm\" />\r\n);\r\n\r\nexport default LoadingSmall;\r\n","// @flow\r\n\r\nimport React, { memo } from 'react';\r\nimport Video from 'commons/components/Video';\r\n\r\ntype Props = {\r\n  dataMedia: Object,\r\n  handleDeleteMedia: Function,\r\n};\r\n\r\nconst ItemMedia = ({ dataMedia, handleDeleteMedia }: Props) => {\r\n  return (\r\n    <>\r\n      {dataMedia?.type === 'image' ? (\r\n        <div className=\"item-media\">\r\n          <div\r\n            className=\"icon-delete\"\r\n            onClick={() => handleDeleteMedia(dataMedia?.id)}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n            onKeyDown={() => {}}\r\n          >\r\n            x\r\n          </div>\r\n          <div\r\n            className=\"media-content\"\r\n            style={{\r\n              backgroundImage: `url(${dataMedia?.url})`,\r\n            }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"item-media\">\r\n          <div\r\n            className=\"icon-delete\"\r\n            onClick={() => handleDeleteMedia(dataMedia?.id)}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n            onKeyDown={() => {}}\r\n          >\r\n            x\r\n          </div>\r\n          <div className=\"media-content\">\r\n            <Video src={dataMedia?.url} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(ItemMedia);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n// @flow\r\n\r\nimport React, { useState, memo, useEffect, useRef } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport MainLayout from 'commons/components/MainLayout';\r\nimport Modal from 'commons/components/Modal';\r\nimport Button from 'commons/components/Button';\r\nimport Input from 'commons/components/Input';\r\nimport Video from 'commons/components/Video';\r\nimport Loading from 'commons/components/Loading';\r\nimport LoadingSmall from 'commons/components/Loading/LoadingSmall';\r\nimport ItemMedia from './ItemMedia';\r\n\r\ntype Props = {\r\n  getListMedia: Function,\r\n  dataListMedia: Array<{\r\n    url: string,\r\n    id: number,\r\n  }>,\r\n  isProcessing: boolean,\r\n  uploadMedia: Function,\r\n  type: string,\r\n  totalRows: number,\r\n  isProcessingUpload: boolean,\r\n  deleteMedia: Function,\r\n  statusCode: any,\r\n};\r\nconst Medias = ({\r\n  getListMedia,\r\n  dataListMedia,\r\n  isProcessing,\r\n  uploadMedia,\r\n  statusCode,\r\n  totalRows,\r\n  type,\r\n  isProcessingUpload,\r\n  deleteMedia,\r\n}: Props) => {\r\n  const inputFile = useRef({});\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [mediaType, setMediaType] = useState('image');\r\n  const [page, setPage] = useState(1);\r\n  const [paginationIndex, setPaginationIndex] = useState(0);\r\n  const [modalCancel, setModalCancel] = useState({\r\n    isShow: false,\r\n    content: '',\r\n  });\r\n  const [idDelete, setIdDelete] = useState(null);\r\n  const [modalDelete, setModalDelete] = useState({\r\n    isShow: false,\r\n    content: '',\r\n  });\r\n\r\n  const [imageUpload, setImageUpload] = useState({\r\n    url: '',\r\n    name: '',\r\n    nameImage: '',\r\n    imageView: '',\r\n  });\r\n\r\n  // sau khi upload thành công\r\n  useEffect(() => {\r\n    switch (type) {\r\n      case 'UPLOAD_MEDIA_SUCCESS':\r\n        setImageUpload({\r\n          ...imageUpload,\r\n          url: '',\r\n          name: '',\r\n          nameImage: '',\r\n          imageView: '',\r\n        });\r\n        if (statusCode === 200) {\r\n          setIsShow(false);\r\n        } else {\r\n          setIsShow(false);\r\n          setModalCancel({\r\n            ...modalCancel,\r\n            isShow: true,\r\n            content: 'Upload hình ảnh đang bị lỗi vui lòng thử lại sau.',\r\n          });\r\n        }\r\n        break;\r\n      case 'UPLOAD_MEDIA_FAILED':\r\n        setIsShow(false);\r\n        setImageUpload({\r\n          ...imageUpload,\r\n          url: '',\r\n          name: '',\r\n          nameImage: '',\r\n          imageView: '',\r\n        });\r\n        setModalCancel({\r\n          ...modalCancel,\r\n          isShow: true,\r\n          content: 'Upload hình ảnh đang bị lỗi vui lòng thử lại sau.',\r\n        });\r\n        break;\r\n\r\n      case 'DELETE_MEDIA_SUCCESS':\r\n        setModalDelete({\r\n          ...modalDelete,\r\n          isShow: false,\r\n          content: '',\r\n        });\r\n        if (statusCode === 200) {\r\n          getListMedia({\r\n            page: 1,\r\n            mediaType,\r\n          });\r\n        } else {\r\n          setModalCancel({\r\n            ...modalCancel,\r\n            isShow: true,\r\n            content: 'Xóa đang bị lỗi vui lòng thử lại sau.',\r\n          });\r\n        }\r\n        break;\r\n      case 'DELETE_MEDIA_FAILED':\r\n        setModalDelete({\r\n          ...modalDelete,\r\n          isShow: false,\r\n          content: '',\r\n        });\r\n        setModalCancel({\r\n          ...modalCancel,\r\n          isShow: true,\r\n          content: 'Xóa đang bị lỗi vui lòng thử lại sau.',\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [type]);\r\n\r\n  useEffect(() => {\r\n    getListMedia({\r\n      page,\r\n      mediaType,\r\n    });\r\n  }, [mediaType, page]);\r\n\r\n  const handleChangeFile = (e) => {\r\n    if (e.target.validity.valid && e.target.files[0]) {\r\n      if (e.target.files[0].size === 0) {\r\n        setModalCancel({\r\n          ...modalCancel,\r\n          isShow: true,\r\n          content: 'Dung lượng hình ảnh phải lớn hơn 0KB.',\r\n        });\r\n      } else if (e.target.files[0].size > 1574000000 && mediaType === 'image') {\r\n        setModalCancel({\r\n          ...modalCancel,\r\n          isShow: true,\r\n          content: 'Kích thước hình ảnh được giới hạn ở 1.5G',\r\n        });\r\n      } else {\r\n        setImageUpload({\r\n          ...imageUpload,\r\n          url: e.target.files[0],\r\n          imageView: (window.URL || window.webkitURL).createObjectURL(\r\n            e.target.files[0]\r\n          ),\r\n          nameImage: e.target.files[0].name,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    setImageUpload({\r\n      ...imageUpload,\r\n      name: value,\r\n    });\r\n  };\r\n  const onButtonClick = () => {\r\n    // `current` points to the mounted file input element\r\n    // eslint-disable-next-line no-unused-expressions\r\n    const inputRefCurrent =\r\n      inputFile && inputFile.current ? inputFile.current : null;\r\n    // eslint-disable-next-line no-unused-expressions\r\n    inputRefCurrent && inputRefCurrent.click();\r\n  };\r\n\r\n  const handleAddMediaProduct = () => {\r\n    // update coupon offline\r\n    const formData = new window.FormData();\r\n    formData.append('name', (imageUpload && imageUpload.name) || '');\r\n    formData.append('file', (imageUpload && imageUpload.url) || '');\r\n    formData.append('type', mediaType);\r\n    uploadMedia(formData);\r\n  };\r\n\r\n  const handleSelectPagination = (value) => {\r\n    setPage(value.selected + 1);\r\n    setPaginationIndex(value.selected);\r\n  };\r\n\r\n  const handleShowDeleteMedia = (idMedia) => {\r\n    setModalDelete({\r\n      ...modalDelete,\r\n      isShow: true,\r\n      content: 'Bạn có muốn xóa hay không?',\r\n    });\r\n    setIdDelete(idMedia);\r\n  };\r\n\r\n  const handleDeleteMedia = () => {\r\n    deleteMedia(idDelete);\r\n  };\r\n\r\n  const renderItemMedia =\r\n    dataListMedia && dataListMedia.length > 0 ? (\r\n      dataListMedia\r\n        .slice(0, 10)\r\n        .map((item) => (\r\n          <ItemMedia\r\n            key={item.id}\r\n            dataMedia={item}\r\n            handleDeleteMedia={handleShowDeleteMedia}\r\n          />\r\n        ))\r\n    ) : (\r\n      <div className=\"no-data\">\r\n        {mediaType === 'image'\r\n          ? 'KHÔNG CÓ HÌNH ẢNH NÀO.'\r\n          : 'KHÔNG CÓ VIDEO NÀO.'}\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <MainLayout activeMenu={1}>\r\n      <div className=\"media-content\">\r\n        <div className=\"media-header d-flex\">\r\n          <div className=\"list-type\">\r\n            <div\r\n              className={`img ${mediaType === 'image' ? 'active' : ''}`}\r\n              onClick={() => {\r\n                setPage(1);\r\n                setMediaType('image');\r\n              }}\r\n              tabIndex=\"0\"\r\n              onKeyPress={() => {}}\r\n              role=\"button\"\r\n            >\r\n              HÌNH ẢNH\r\n            </div>\r\n            <div\r\n              className={`video ${mediaType === 'video' ? 'active' : ''}`}\r\n              onClick={() => {\r\n                setPage(1);\r\n                setMediaType('video');\r\n              }}\r\n              tabIndex=\"0\"\r\n              onKeyPress={() => {}}\r\n              role=\"button\"\r\n            >\r\n              VIDEO\r\n            </div>\r\n          </div>\r\n          <div className=\"btn-upload\">\r\n            <Button\r\n              customClass=\"button--primary\"\r\n              onClick={() => setIsShow(true)}\r\n            >\r\n              TẢI LÊN\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"list-media\">\r\n          {isProcessing ? <Loading /> : <>{renderItemMedia}</>}\r\n        </div>\r\n        {dataListMedia && dataListMedia.length > 0 && (\r\n          <div className=\"wrapper-pagination mt-4\">\r\n            {!isProcessing && (\r\n              <>\r\n                {totalRows > 10 && (\r\n                  <ReactPaginate\r\n                    previousLabel=\"Previous\"\r\n                    nextLabel=\"Next\"\r\n                    breakLabel={<span className=\"gap\">...</span>}\r\n                    pageCount={Math.ceil(totalRows / 10)}\r\n                    onPageChange={(eventKey) =>\r\n                      handleSelectPagination(eventKey)\r\n                    }\r\n                    forcePage={paginationIndex}\r\n                    containerClassName=\"pagination\"\r\n                    disabledClassName=\"disabled\"\r\n                    activeClassName=\"active\"\r\n                    breakClassName=\"page-item\"\r\n                    breakLinkClassName=\"page-link\"\r\n                    pageClassName=\"page-item\"\r\n                    pageLinkClassName=\"page-link\"\r\n                    previousClassName=\"page-item\"\r\n                    previousLinkClassName=\"page-link\"\r\n                    nextClassName=\"page-item\"\r\n                    marginPagesDisplayed={1}\r\n                    nextLinkClassName=\"page-link\"\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <Modal\r\n        isOpen={isShow}\r\n        handleClose={() => {\r\n          setIsShow(false);\r\n          setImageUpload({\r\n            ...imageUpload,\r\n            url: '',\r\n            name: '',\r\n            nameImage: '',\r\n            imageView: '',\r\n          });\r\n        }}\r\n        customClassButton=\"w-100\"\r\n        classNameBtnLeft=\"btn-left\"\r\n        customClass=\"popup-add-product media\"\r\n        isShowIconClose\r\n      >\r\n        <div className=\"title-content\">\r\n          <div className=\"popup-add-product__left\">\r\n            <div\r\n              className=\"box__input\"\r\n              onClick={onButtonClick}\r\n              onKeyDown={() => {}}\r\n              tabIndex={0}\r\n              role=\"button\"\r\n            >\r\n              {mediaType === 'image' ? (\r\n                <input\r\n                  className=\"box__file\"\r\n                  type=\"file\"\r\n                  ref={inputFile}\r\n                  accept=\"image/jpg, image/jpeg, image/png, capture=camera\"\r\n                  onChange={(e) => handleChangeFile(e)}\r\n                />\r\n              ) : (\r\n                <input\r\n                  className=\"box__file\"\r\n                  type=\"file\"\r\n                  ref={inputFile}\r\n                  accept=\"video/mp4,video/x-m4v,video/*\"\r\n                  onChange={(e) => handleChangeFile(e)}\r\n                />\r\n              )}\r\n\r\n              {/* accept=\"video/mp4,video/x-m4v,video/*\" */}\r\n              <label>\r\n                <strong>\r\n                  {(imageUpload && imageUpload.nameImage) ||\r\n                    'Kéo thả tập tin vào đây'}\r\n                </strong>\r\n                <Button\r\n                  customClass=\"button--primary add-file mt-0\"\r\n                  onClick={() => {}}\r\n                >\r\n                  <p>CHỌN TỆP</p>\r\n                </Button>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"popup-add-product__right\">\r\n            <p className=\" input__label\">\r\n              {mediaType === 'image' ? 'Hình ảnh' : 'Video'}\r\n            </p>\r\n            {mediaType === 'image' ? (\r\n              <div className=\"image-view\">\r\n                {imageUpload && imageUpload.imageView && (\r\n                  <img\r\n                    src={imageUpload && imageUpload.imageView}\r\n                    alt={imageUpload && imageUpload.name}\r\n                  />\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"mb-3\">\r\n                <Video src={imageUpload && imageUpload.imageView} />\r\n              </div>\r\n            )}\r\n            <Input\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                handleChange(e.target.value);\r\n              }}\r\n              value={imageUpload && imageUpload.name}\r\n              label={mediaType === 'image' ? 'Tên hình ảnh' : 'Tên Video'}\r\n            />\r\n\r\n            <Button\r\n              customClass=\"button--primary mt-0\"\r\n              onClick={() => handleAddMediaProduct()}\r\n              isDisabled={\r\n                !imageUpload.imageView ||\r\n                !imageUpload.name ||\r\n                isProcessingUpload\r\n              }\r\n            >\r\n              <p>Thêm {isProcessingUpload && <LoadingSmall />}</p>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        isOpen={modalCancel.isShow}\r\n        isShowFooter\r\n        handleClose={() => {\r\n          setModalCancel({ ...modalCancel, isShow: false });\r\n        }}\r\n        handleSubmit={() => {\r\n          setModalCancel({ ...modalCancel, isShow: false });\r\n        }}\r\n        textBtnRight=\"ĐÓNG\"\r\n      >\r\n        {modalCancel.content}\r\n      </Modal>\r\n\r\n      <Modal\r\n        isOpen={modalDelete.isShow}\r\n        isShowFooter\r\n        handleClose={() =>\r\n          setModalDelete({\r\n            ...modalDelete,\r\n            isShow: false,\r\n            content: '',\r\n          })\r\n        }\r\n        handleSubmit={() => handleDeleteMedia()}\r\n        textBtnRight=\"KHÔNG\"\r\n        isShowTwoBtn\r\n        textBtnLeft=\"CÓ\"\r\n      >\r\n        {modalDelete.content}\r\n      </Modal>\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(Medias);\r\n","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport mediaComponent from '../components';\r\nimport { Creators } from '../redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    type: state.mediaReducer.type,\r\n    isProcessing: state.mediaReducer.isProcessing,\r\n    dataListMedia: state.mediaReducer.dataListMedia,\r\n    totalRows: state.mediaReducer.totalRows,\r\n    isProcessingUpload: state.mediaReducer.isProcessingUpload,\r\n    isProcessingDelete: state.mediaReducer.isProcessingDelete,\r\n    statusCode: state.mediaReducer.statusCode,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      ...Creators,\r\n      getListMedia: Creators.getListMedia,\r\n      uploadMedia: Creators.uploadMedia,\r\n      deleteMedia: Creators.deleteMedia,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(mediaComponent);\r\n"],"sourceRoot":""}