{"version":3,"sources":["modules/customer/components/progressProject.js","modules/customer/containers/progressProjectContainer.js"],"names":["InformationNeeds","_ref","getDetailCustomer","dataDetailCustomer","dataAreas","getListConstructionCustomer","match","listConstructionCustomer","registerConstructionCustomer","listTableConstruction","totalConstruction","getListParent","dataParent","type","isProcessing","customerId","params","id","dataAddProject","setDataAddProject","useState","category","partner_id","description","time","price","prices","note","project","areas","filter","item","area_id","useEffect","sttTime","setSttTime","progressStart","setProgressStart","progressEnd","setProgressEnd","handleChange","value","name","listProject","projects","map","label","React","createElement","MainLayout","activeMenu","Loading","Container","fluid","Row","className","Col","xs","md","src","images","iconBack","alt","onClick","window","history","go","role","phone","email","Button","customClass","SelectDropdown","placeholder","listItem","Immutable","asMutable","onChange","e","option","target","timeProject","handleRegister","_dataAddProject$proje","_dataAddProject$partn","_dataAddProject$time","_dataAddProject$time2","data","project_id","estimate","construction_time","unit","progress_begin","progress_end","paid","amount","isDisabled","address","Table","tableHeads","headProgress","tableBody","showLabel","isShowId","isShowColumnBtn","nameBtn2","sm","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","Math","ceil","forcePage","containerClassName","disabledClassName","activeClassName","breakClassName","breakLinkClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","marginPagesDisplayed","nextLinkClassName","connect","state","customerReducer","partnerReducer","postReducer","dispatch","bindActionCreators","Creators","getListProject","progressProjectComponent"],"mappings":"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","file":"static/js/36.b6bc8fb0.chunk.js","sourcesContent":["// @flow\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Immutable from 'seamless-immutable';\r\nimport ReactPaginate from 'react-paginate';\r\nimport SelectDropdown from 'commons/components/Select';\r\nimport MainLayout from 'commons/components/MainLayout';\r\nimport Button from 'commons/components/Button';\r\nimport images from 'themes/images';\r\nimport Table from 'commons/components/Table';\r\nimport Loading from 'commons/components/Loading';\r\nimport { headProgress } from 'constants/itemHead';\r\nimport { timeProject } from '../../../mockData/dataSelect';\r\n\r\ntype Props = {\r\n  getDetailCustomer: Function,\r\n  dataDetailCustomer: Object,\r\n  dataAreas: Array<{\r\n    id: number,\r\n    value: string,\r\n  }>,\r\n  getListConstructionCustomer: Function,\r\n  match: {\r\n    params: {\r\n      id: string,\r\n    },\r\n  },\r\n  listConstructionCustomer: Object,\r\n  registerConstructionCustomer: Function,\r\n  listTableConstruction: Array<{\r\n    id: number,\r\n  }>,\r\n  totalConstruction: number,\r\n  getListParent: Function,\r\n  dataParent: Array<{}>,\r\n  type: string,\r\n  isProcessing: boolean,\r\n};\r\nconst InformationNeeds = ({\r\n  getDetailCustomer,\r\n  dataDetailCustomer,\r\n  dataAreas,\r\n  getListConstructionCustomer,\r\n  match,\r\n  listConstructionCustomer,\r\n  registerConstructionCustomer,\r\n  listTableConstruction,\r\n  totalConstruction,\r\n  getListParent,\r\n  dataParent,\r\n  type,\r\n  isProcessing,\r\n}: Props) => {\r\n  const customerId = match.params.id;\r\n  const [dataAddProject, setDataAddProject] = useState({\r\n    category: '',\r\n    partner_id: null,\r\n    description: '',\r\n    time: null,\r\n    price: '',\r\n    prices: '',\r\n    note: '',\r\n    project: null,\r\n  });\r\n  const areas = dataAreas.filter(\r\n    (item) => item.id === dataDetailCustomer.area_id\r\n  );\r\n\r\n  useEffect(() => {\r\n    getDetailCustomer(customerId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getListParent();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getListConstructionCustomer(customerId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [customerId]);\r\n\r\n  useEffect(() => {\r\n    if (type === 'REGISTER_CONSTRUCTION_CUSTOMER_SUCCESS') {\r\n      getListConstructionCustomer(customerId);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [type]);\r\n  const [sttTime, setSttTime] = useState(0);\r\n  const [progressStart, setProgressStart] = useState(0);\r\n  const [progressEnd, setProgressEnd] = useState(0);\r\n  const handleChange = (value, name) => {\r\n    setDataAddProject({\r\n      ...dataAddProject,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const listProject =\r\n    dataDetailCustomer &&\r\n    dataDetailCustomer.projects &&\r\n    dataDetailCustomer.projects.map((item) => {\r\n      return { id: item.id, value: item.name, label: item.name };\r\n    });\r\n\r\n  const handleRegister = () => {\r\n    const data = {\r\n      project_id: dataAddProject?.project?.id,\r\n      partner_id: dataAddProject?.partner_id?.id,\r\n      category: dataAddProject.category,\r\n      description: dataAddProject.description,\r\n      estimate: sttTime,\r\n      construction_time: dataAddProject?.time?.value,\r\n      unit: dataAddProject?.time?.value,\r\n      progress_begin: progressStart,\r\n      progress_end: progressEnd,\r\n      paid: dataAddProject.prices,\r\n      amount: dataAddProject.price,\r\n      note: dataAddProject.note,\r\n    };\r\n    registerConstructionCustomer(data);\r\n  };\r\n  return (\r\n    <MainLayout activeMenu={4}>\r\n      {isProcessing ? (\r\n        <Loading />\r\n      ) : (\r\n        <Container fluid>\r\n          <Row className=\"content-wrapper page-information page-progress\">\r\n            <Col xs={12} md={12} className=\"header-page\">\r\n              <img\r\n                src={images.iconBack}\r\n                alt=\"\"\r\n                className=\"action-increase\"\r\n                onClick={() => window.history.go(-1)}\r\n                role=\"presentation\"\r\n              />\r\n              <h2 className=\"title-page\">Quản lý tiến độ công trình</h2>\r\n            </Col>\r\n            <Col xs={12} md={3}>\r\n              <p className=\"page-progress__title-info\">Tên khách hàng</p>\r\n              <h2 className=\"page-progress__content-info name\">\r\n                {dataDetailCustomer.name}\r\n              </h2>\r\n            </Col>\r\n            <Col xs={12} md={3}>\r\n              <p className=\"page-progress__title-info\">Số điện thoại</p>\r\n              <h2 className=\"page-progress__content-info\">\r\n                {dataDetailCustomer.phone}\r\n              </h2>\r\n            </Col>\r\n            <Col xs={12} md={3}>\r\n              <p className=\"page-progress__title-info\">Email</p>\r\n              <h2 className=\"page-progress__content-info\">\r\n                {dataDetailCustomer.email}\r\n              </h2>\r\n            </Col>\r\n            <Col xs={12} md={3}>\r\n              <p className=\"page-progress__title-info\">Khu vực</p>\r\n              <h2 className=\"page-progress__content-info\">\r\n                {areas[0] && areas[0].value}\r\n              </h2>\r\n            </Col>\r\n            <Col xs={12} md={12} className=\"action-delete\">\r\n              <Button customClass=\"button--primary\" onClick={() => {}}>\r\n                <p>LƯU THAY ĐỔI</p>\r\n              </Button>\r\n            </Col>\r\n            <Col xs={12} md={4}>\r\n              <SelectDropdown\r\n                placeholder=\"Chọn dự án\"\r\n                listItem={listProject && Immutable.asMutable(listProject)}\r\n                onChange={(e) => {\r\n                  handleChange(e, 'project');\r\n                }}\r\n                option={dataAddProject.project}\r\n                customClass=\"select-project\"\r\n                label=\"Chọn dự án\"\r\n              />\r\n            </Col>\r\n            <Col xs={12} md={12}>\r\n              <div className=\"custom-head table-head-progress\">\r\n                <p>HẠNG MỤC / ĐƠN VỊ</p>\r\n                <p>MÔ TẢ KỸ THUẬT</p>\r\n                <p>DỰ TOÁN</p>\r\n                <p>THỜI GIAN THI CÔNG</p>\r\n                <p>TIẾN ĐỘ</p>\r\n                <p>SỐ TIỀN ĐÃ THANH TOÁN</p>\r\n                <p>GHI CHÚ</p>\r\n              </div>\r\n              <div className=\"custom-body table-body-progress\">\r\n                <div className=\"custom-body__item\">\r\n                  <SelectDropdown\r\n                    placeholder=\"Nhập tên hạng mục\"\r\n                    listItem={dataParent && Immutable.asMutable(dataParent)}\r\n                    onChange={(e) => {\r\n                      handleChange(e, 'partner_id');\r\n                    }}\r\n                    option={dataAddProject.partner_id}\r\n                    customClass=\"select-category\"\r\n                  />\r\n                  <textarea\r\n                    onChange={(e) => {\r\n                      handleChange(e.target.value, 'category');\r\n                    }}\r\n                    value={dataAddProject.category}\r\n                    placeholder=\"Nhập tên đơn vị\"\r\n                  />\r\n                </div>\r\n                <div className=\"custom-body__item\">\r\n                  <textarea\r\n                    onChange={(e) => {\r\n                      handleChange(e.target.value, 'description');\r\n                    }}\r\n                    value={dataAddProject.description}\r\n                    placeholder=\"Nhập mô tả\"\r\n                  />\r\n                </div>\r\n                <div className=\"custom-body__item\">\r\n                  <textarea\r\n                    onChange={(e) => {\r\n                      handleChange(e.target.value, 'price');\r\n                    }}\r\n                    value={dataAddProject.price}\r\n                    placeholder=\"Nhập số tiền\"\r\n                  />\r\n                </div>\r\n                <div className=\"custom-body__item action\">\r\n                  <div>\r\n                    <img\r\n                      src={images.iconBack}\r\n                      alt=\"\"\r\n                      className=\"action-increase\"\r\n                      onClick={() => setSttTime(sttTime + 1)}\r\n                      role=\"presentation\"\r\n                    />\r\n                    <p>{sttTime}</p>\r\n                    <img\r\n                      src={images.iconBack}\r\n                      alt=\"\"\r\n                      className=\"action__reduction\"\r\n                      onClick={() => sttTime !== 0 && setSttTime(sttTime - 1)}\r\n                      role=\"presentation\"\r\n                    />\r\n                  </div>\r\n                  <SelectDropdown\r\n                    placeholder=\"THÁNG\"\r\n                    listItem={timeProject}\r\n                    onChange={(e) => {\r\n                      handleChange(e, 'time');\r\n                    }}\r\n                    option={dataAddProject.time}\r\n                    customClass=\"select-headquarters\"\r\n                  />\r\n                </div>\r\n                <div className=\"custom-body__item action-progress\">\r\n                  <div>\r\n                    <img\r\n                      src={images.iconBack}\r\n                      alt=\"\"\r\n                      className=\"action-increase\"\r\n                      onClick={() => setProgressStart(progressStart + 1)}\r\n                      role=\"presentation\"\r\n                    />\r\n                    <p>{progressStart}</p>\r\n                    <img\r\n                      src={images.iconBack}\r\n                      alt=\"\"\r\n                      className=\"action__reduction\"\r\n                      onClick={() =>\r\n                        progressStart !== 0 &&\r\n                        setProgressStart(progressStart - 1)\r\n                      }\r\n                      role=\"presentation\"\r\n                    />\r\n                  </div>\r\n                  <h3>/</h3>\r\n                  <div>\r\n                    <img\r\n                      src={images.iconBack}\r\n                      alt=\"\"\r\n                      className=\"action-increase\"\r\n                      onClick={() => setProgressEnd(progressEnd + 1)}\r\n                      role=\"presentation\"\r\n                    />\r\n                    <p>{progressEnd}</p>\r\n                    <img\r\n                      src={images.iconBack}\r\n                      alt=\"\"\r\n                      className=\"action__reduction\"\r\n                      onClick={() =>\r\n                        progressEnd !== 0 && setProgressEnd(progressEnd - 1)\r\n                      }\r\n                      role=\"presentation\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"custom-body__item\">\r\n                  <textarea\r\n                    onChange={(e) => {\r\n                      handleChange(e.target.value, 'prices');\r\n                    }}\r\n                    value={dataAddProject.prices}\r\n                    placeholder=\"Nhập số tiền\"\r\n                  />\r\n                </div>\r\n                <div className=\"custom-body__item\">\r\n                  <textarea\r\n                    onChange={(e) => {\r\n                      handleChange(e.target.value, 'note');\r\n                    }}\r\n                    value={dataAddProject.note}\r\n                    placeholder=\"Nhập Ghi chú\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col xs={12} md={12} className=\"action-delete\">\r\n              <Button\r\n                customClass=\"button--primary\"\r\n                onClick={handleRegister}\r\n                isDisabled={dataAddProject.project === null}\r\n              >\r\n                <p>THÊM MỚI</p>\r\n              </Button>\r\n            </Col>\r\n            <Col xs={12} md={12} className=\"title-project\">\r\n              Dự án 1\r\n            </Col>\r\n            <Col xs={12} md={4}>\r\n              <p className=\"page-progress__title-info\">Tên dự án/ chủ đầu tư</p>\r\n              <h2 className=\"page-progress__content-info\">\r\n                {listConstructionCustomer?.name}\r\n              </h2>\r\n            </Col>\r\n            <Col xs={12} md={7}>\r\n              <p className=\"page-progress__title-info\">Địa chỉ công trình</p>\r\n              <h2 className=\"page-progress__content-info\">\r\n                {listConstructionCustomer?.address}\r\n              </h2>\r\n            </Col>\r\n            <Col xs={12} md={12} className=\"pt-3\">\r\n              <Table\r\n                tableHeads={headProgress}\r\n                tableBody={listTableConstruction}\r\n                showLabel\r\n                isShowId\r\n                isShowColumnBtn\r\n                nameBtn2=\"Xem\"\r\n                // handleClickBtnView={handleViewInformation}\r\n              />\r\n            </Col>\r\n            <Col sm={12} className=\"wrapper-pagination\">\r\n              <ReactPaginate\r\n                previousLabel=\"Previous\"\r\n                nextLabel=\"Next\"\r\n                breakLabel={<span className=\"gap\">...</span>}\r\n                pageCount={Math.ceil(totalConstruction / 10)}\r\n                // onPageChange={(eventKey) => handleSelectPagination(eventKey)}\r\n                forcePage={0}\r\n                containerClassName=\"pagination\"\r\n                disabledClassName=\"disabled\"\r\n                activeClassName=\"active\"\r\n                breakClassName=\"page-item\"\r\n                breakLinkClassName=\"page-link\"\r\n                pageClassName=\"page-item\"\r\n                pageLinkClassName=\"page-link\"\r\n                previousClassName=\"page-item\"\r\n                previousLinkClassName=\"page-link\"\r\n                nextClassName=\"page-item\"\r\n                marginPagesDisplayed={1}\r\n                nextLinkClassName=\"page-link\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default InformationNeeds;\r\n","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport progressProjectComponent from '../components/progressProject';\r\n\r\nimport { Creators } from '../redux';\r\nimport { Creators as postReducer } from '../../post/redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    type: state.customerReducer.type,\r\n    isProcessing: state.customerReducer.isProcessing,\r\n    listProject: state.customerReducer.listProject,\r\n    dataDetailCustomer: state.customerReducer.dataDetailCustomer,\r\n    dataAreas: state.partnerReducer.dataAreas,\r\n    listConstructionCustomer: state.customerReducer.listConstructionCustomer,\r\n    listTableConstruction: state.customerReducer.listTableConstruction,\r\n    totalConstruction: state.customerReducer.totalConstruction,\r\n    dataParent: state.postReducer.dataParent,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      ...Creators,\r\n      getListProject: Creators.getListProject,\r\n      getListConstructionCustomer: Creators.getListConstructionCustomer,\r\n      registerConstructionCustomer: Creators.registerConstructionCustomer,\r\n      getListParent: postReducer.getListParent,\r\n      getDetailCustomer: Creators.getDetailCustomer,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(progressProjectComponent);\r\n"],"sourceRoot":""}